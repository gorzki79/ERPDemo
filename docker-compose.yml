version: '3.4'

services:
  erpdemo.api:
    image: ${DOCKER_REGISTRY-}erpdemoapi
    build:
      context: .
      dockerfile: ERPDemo.Api/Dockerfile
  db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2022-CU11-ubuntu-22.04
    environment:
        - SA_PASSWORD=${SA_PASSWORD}
        - ACCEPT_EULA=${ACCEPT_EULA}
        - MSSQL_PID=${MSSQL_PID}
    ports:
     - 1433:1433
    volumes:
        - ./ERPDemo.DB/sqlserver/data:/var/opt/mssql/data
        - ./ERPDemo.DB/sqlserver/log:/var/opt/mssql/log
        - ./ERPDemo.DB/scripts:/scripts/
    command:
     - /bin/bash
     - -c
     - |
         # Launch MSSQL and send to background
         /opt/mssql/bin/sqlservr & pid=$$!
         # Wait for it to be available
         echo "Waiting for MS SQL to be available"
         /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@SERVERNAME"
         is_up=$$?
         while [ $$is_up -ne 0 ] ; do
         echo -e $$(date)
         /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@SERVERNAME"
         is_up=$$?
         sleep 5
         done
         # Run every script in /scripts
         # TODO set a flag so that this is only done once on creation,
         # and not every time the container runs
         ls
         for f in /scripts/*.sql
         do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$f
         done
         # trap SIGTERM and send same to sqlservr process for clean shutdown
         trap "kill -15 $$pid" SIGTERM
         # Wait on the sqlserver process
         echo "All scripts have been executed. Waiting for MS SQL(pid $$pid) to terminate."
         # Wait on the sqlserver process
         wait $$pid